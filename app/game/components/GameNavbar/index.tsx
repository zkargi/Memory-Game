import React, { useEffect, useState } from 'react';

// GameNavbar bileÅŸeni iÃ§in props'larÄ± tanÄ±mladÄ±k
interface Props { flipCount: number, gameOver: boolean  };

export function GameNavbar({ flipCount, gameOver }: Props) {
  const [gameHistory, setGameHistory] = useState<{ flipCount: number }[]>([]);
   // Oyun geÃ§miÅŸini saklamak iÃ§in bir state oluÅŸturudk

  useEffect(() => { // Oyun bittiÄŸinde geÃ§miÅŸi gÃ¼ncellemek iÃ§in useEffect kullandÄ±k
    // gameOver true olduÄŸunda yeni bir nesne ekleyerek gameHistory'yi gÃ¼ncelledik
    if (gameOver) {
      setGameHistory(prevHistory => [...prevHistory, {flipCount}]);
    }
  }, [flipCount, gameOver]);
   // En iyi skoru gameHistory'den almak iÃ§in fonksiyon yazdÄ±k
  console.log(gameHistory)
  const getBestScore = (history: any[]) => {//game history iÃ§erisindeki en iyi skoru bulduÄŸumuz kÄ±sÄ±m
    const bestScore = history.length > 0 ? Math.min(...history.map(item => item.flipCount)) : null;
    return bestScore !== null ? "En iyi skor: ${bestScore} ": 'HenÃ¼z skor yok';
  };

  return (

    <div>
      <div className="fixed top-0 left-0 p-4 text-black">
        <p className="font-bold shadow">Son Oyun SkorlarÄ±:</p>
      <ul>
        {gameHistory.slice(0, 10).map((item, index) => (
          <li key={index}>{item.flipCount}</li>
        ))}
      </ul>
      </div>
      <div className="fixed top-0 left-40 p-4 text-black">
        <p className="font-bold shadow">En Ä°yi Skor:</p>
        <p>{getBestScore(gameHistory)}</p>
      </div>
      <div className="flex justify-between mb-4 text-lg">
        <span>{flipCount}</span>
        <span>
          {gameOver ? (
            <React.Fragment>
              Tebrikler! ðŸŽ‰{' '}
            </React.Fragment>
          ) : (
            'Ä°yi Åžanslar!'
          )}
        </span>
      </div>
    </div>
  );
}